/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LFWUtils_ETH,
  LFWUtils_ETHInterface,
} from "../../../contracts/LFWUtils_ETH.sol/LFWUtils_ETH";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_scAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getAaveStakingInfo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "stakingInfo",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_scAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getConvexStakingInfo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "stakingInfo",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_scAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getLidoStakingInfo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "stakingInfo",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_scAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getShibaStakingInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "stakingInfo",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getSushiFarmingV1Info",
    outputs: [
      {
        internalType: "uint256[]",
        name: "farmingInfo",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "farmingData",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getSushiFarmingV2Info",
    outputs: [
      {
        internalType: "uint256[]",
        name: "farmingInfo",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "farmingData",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_scAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "getSushiStakingInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "stakingInfo",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260056000556002600155600360025573a5f8c5dbd5f286960b9d90548680ae5ebff07652600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073442af784a788a5bd6f42a01ebe9f287a871243fb600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073cf50b810e57ac33b91dcf525c6ddd9881b139332600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507372a19342e8f1838460ebfccef09f6585e32db86e600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073c2edad668740f1aa35e4d8f227fb8e17dca888cd600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073ef0881ec094552b2e128cf945ef17a6752b4ec5d600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550736b3595068778dd592e39a122f4f5a5cf09c90fe2600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611bee600a5561016d600b556301e13380600c5534801561028657600080fd5b50611f7c806102966000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063938772111161005b5780639387721114610113578063940d68d514610143578063b92dcda614610173578063f32c7b23146101a45761007d565b8063035354ba146100825780632ccfa8e1146100b257806363abd73e146100e3575b600080fd5b61009c600480360381019061009791906117bf565b6101d4565b6040516100a99190611bb0565b60405180910390f35b6100cc60048036038101906100c79190611939565b6105a4565b6040516100da929190611bd2565b60405180910390f35b6100fd60048036038101906100f891906117bf565b610a66565b60405161010a9190611c09565b60405180910390f35b61012d600480360381019061012891906117bf565b610afe565b60405161013a9190611bb0565b60405180910390f35b61015d600480360381019061015891906117bf565b610e92565b60405161016a9190611bb0565b60405180910390f35b61018d60048036038101906101889190611939565b6111a8565b60405161019b929190611bd2565b60405180910390f35b6101be60048036038101906101b991906117bf565b611667565b6040516101cb9190611c09565b60405180910390f35b606060005467ffffffffffffffff8111156101f2576101f1611e9f565b5b6040519080825280602002602001820160405280156102205781602001602082028036833780820191505090505b50905060008390508073ffffffffffffffffffffffffffffffffffffffff16638dbefee2846040518263ffffffff1660e01b81526004016102619190611b43565b60206040518083038186803b15801561027957600080fd5b505afa15801561028d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b1919061190c565b826000815181106102c5576102c4611e70565b5b6020026020010181815250508073ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b815260040161030a9190611b43565b60206040518083038186803b15801561032257600080fd5b505afa158015610336573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035a919061190c565b8260018151811061036e5761036d611e70565b5b60200260200101818152505060008173ffffffffffffffffffffffffffffffffffffffff1663f11b8188866040518263ffffffff1660e01b81526004016103b59190611b43565b60606040518083038186803b1580156103cd57600080fd5b505afa1580156103e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040591906118b9565b50506fffffffffffffffffffffffffffffffff1690506000600c548261042b9190611cf0565b905060008373ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561047557600080fd5b505afa158015610489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ad919061190c565b905081856002815181106104c4576104c3611e70565b5b60200260200101818152505080856003815181106104e5576104e4611e70565b5b602002602001018181525050438473ffffffffffffffffffffffffffffffffffffffff1663919cd40f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561053857600080fd5b505afa15801561054c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610570919061190c565b61057a9190611d4a565b8560048151811061058e5761058d611e70565b5b6020026020010181815250505050505092915050565b60608060015467ffffffffffffffff8111156105c3576105c2611e9f565b5b6040519080825280602002602001820160405280156105f15781602001602082028036833780820191505090505b50915060025467ffffffffffffffff8111156106105761060f611e9f565b5b60405190808252806020026020018201604052801561063e5781602001602082028036833780820191505090505b5090506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663195426ec86866040518363ffffffff1660e01b81526004016106a3929190611c24565b60206040518083038186803b1580156106bb57600080fd5b505afa1580156106cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f3919061190c565b8360008151811061070757610706611e70565b5b6020026020010181815250508073ffffffffffffffffffffffffffffffffffffffff166393f1a40b86866040518363ffffffff1660e01b815260040161074e929190611c24565b604080518083038186803b15801561076557600080fd5b505afa158015610779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079d9190611979565b50836001815181106107b2576107b1611e70565b5b60200260200101818152505060008173ffffffffffffffffffffffffffffffffffffffff16631526fe27876040518263ffffffff1660e01b81526004016107f99190611c09565b60806040518083038186803b15801561081157600080fd5b505afa158015610825573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084991906117ff565b505050905060008190508073ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561089957600080fd5b505afa1580156108ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d19190611792565b846000815181106108e5576108e4611e70565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561096557600080fd5b505afa158015610979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099d9190611792565b846001815181106109b1576109b0611e70565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600281518110610a2257610a21611e70565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505050509250929050565b6000808390508073ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401610aa59190611b43565b60206040518083038186803b158015610abd57600080fd5b505afa158015610ad1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af5919061190c565b91505092915050565b6060600267ffffffffffffffff811115610b1b57610b1a611e9f565b5b604051908082528060200260200182016040528015610b495781602001602082028036833780820191505090505b509050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610cfe5760008390508073ffffffffffffffffffffffffffffffffffffffff16628cc262846040518263ffffffff1660e01b8152600401610bdf9190611b43565b60206040518083038186803b158015610bf757600080fd5b505afa158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f919061190c565b82600081518110610c4357610c42611e70565b5b6020026020010181815250508073ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b8152600401610c889190611b43565b60206040518083038186803b158015610ca057600080fd5b505afa158015610cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd8919061190c565b82600181518110610cec57610ceb611e70565b5b60200260200101818152505050610e8c565b600083905060007362b9c7356a2dc64a1969e19c23e4f579f9810aa790508173ffffffffffffffffffffffffffffffffffffffff1663e70b9e2785836040518363ffffffff1660e01b8152600401610d57929190611b5e565b60206040518083038186803b158015610d6f57600080fd5b505afa158015610d83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da7919061190c565b83600081518110610dbb57610dba611e70565b5b6020026020010181815250508173ffffffffffffffffffffffffffffffffffffffff1663aa33fedb8560006040518363ffffffff1660e01b8152600401610e03929190611b87565b60606040518083038186803b158015610e1b57600080fd5b505afa158015610e2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e539190611866565b826dffffffffffffffffffffffffffff16925090505083600181518110610e7d57610e7c611e70565b5b60200260200101818152505050505b92915050565b6060600267ffffffffffffffff811115610eaf57610eae611e9f565b5b604051908082528060200260200182016040528015610edd5781602001602082028036833780820191505090505b50905060008390506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff1663d5002f2e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f5257600080fd5b505afa158015610f66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8a919061190c565b8273ffffffffffffffffffffffffffffffffffffffff166337cfdaca6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fd057600080fd5b505afa158015610fe4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611008919061190c565b8373ffffffffffffffffffffffffffffffffffffffff1663f5eb42dc876040518263ffffffff1660e01b81526004016110419190611b43565b60206040518083038186803b15801561105957600080fd5b505afa15801561106d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611091919061190c565b61109b9190611cf0565b6110a59190611cbf565b836000815181106110b9576110b8611e70565b5b60200260200101818152505060008060008373ffffffffffffffffffffffffffffffffffffffff1663534649c46040518163ffffffff1660e01b815260040160606040518083038186803b15801561111057600080fd5b505afa158015611124573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114891906119b9565b925092509250808261115a9190611cf0565b600c5483856111699190611d4a565b6111739190611cf0565b61117d9190611cbf565b8660018151811061119157611190611e70565b5b602002602001018181525050505050505092915050565b60608060015467ffffffffffffffff8111156111c7576111c6611e9f565b5b6040519080825280602002602001820160405280156111f55781602001602082028036833780820191505090505b50915060025467ffffffffffffffff81111561121457611213611e9f565b5b6040519080825280602002602001820160405280156112425781602001602082028036833780820191505090505b5090506000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663195426ec86866040518363ffffffff1660e01b81526004016112a7929190611c24565b60206040518083038186803b1580156112bf57600080fd5b505afa1580156112d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f7919061190c565b8360008151811061130b5761130a611e70565b5b6020026020010181815250508073ffffffffffffffffffffffffffffffffffffffff166393f1a40b86866040518363ffffffff1660e01b8152600401611352929190611c24565b604080518083038186803b15801561136957600080fd5b505afa15801561137d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a19190611979565b50836001815181106113b6576113b5611e70565b5b60200260200101818152505060008173ffffffffffffffffffffffffffffffffffffffff166378ed5d1f876040518263ffffffff1660e01b81526004016113fd9190611c09565b60206040518083038186803b15801561141557600080fd5b505afa158015611429573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144d9190611792565b905060008190508073ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561149a57600080fd5b505afa1580156114ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d29190611792565b846000815181106114e6576114e5611e70565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b15801561156657600080fd5b505afa15801561157a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159e9190611792565b846001815181106115b2576115b1611e70565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460028151811061162357611622611e70565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505050509250929050565b6000808390508073ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016116a69190611b43565b60206040518083038186803b1580156116be57600080fd5b505afa1580156116d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f6919061190c565b91505092915050565b60008135905061170e81611ed3565b92915050565b60008151905061172381611ed3565b92915050565b60008151905061173881611eea565b92915050565b60008151905061174d81611f01565b92915050565b60008135905061176281611f18565b92915050565b60008151905061177781611f18565b92915050565b60008151905061178c81611f2f565b92915050565b6000602082840312156117a8576117a7611ece565b5b60006117b684828501611714565b91505092915050565b600080604083850312156117d6576117d5611ece565b5b60006117e4858286016116ff565b92505060206117f5858286016116ff565b9150509250929050565b6000806000806080858703121561181957611818611ece565b5b600061182787828801611714565b945050602061183887828801611768565b935050604061184987828801611768565b925050606061185a87828801611768565b91505092959194509250565b60008060006060848603121561187f5761187e611ece565b5b600061188d86828701611729565b935050602061189e86828701611729565b92505060406118af8682870161177d565b9150509250925092565b6000806000606084860312156118d2576118d1611ece565b5b60006118e08682870161173e565b93505060206118f18682870161173e565b925050604061190286828701611768565b9150509250925092565b60006020828403121561192257611921611ece565b5b600061193084828501611768565b91505092915050565b600080604083850312156119505761194f611ece565b5b600061195e85828601611753565b925050602061196f858286016116ff565b9150509250929050565b600080604083850312156119905761198f611ece565b5b600061199e85828601611768565b92505060206119af85828601611768565b9150509250929050565b6000806000606084860312156119d2576119d1611ece565b5b60006119e086828701611768565b93505060206119f186828701611768565b9250506040611a0286828701611768565b9150509250925092565b6000611a188383611a3c565b60208301905092915050565b6000611a308383611b25565b60208301905092915050565b611a4581611d7e565b82525050565b611a5481611d7e565b82525050565b6000611a6582611c6d565b611a6f8185611c9d565b9350611a7a83611c4d565b8060005b83811015611aab578151611a928882611a0c565b9750611a9d83611c83565b925050600181019050611a7e565b5085935050505092915050565b6000611ac382611c78565b611acd8185611cae565b9350611ad883611c5d565b8060005b83811015611b09578151611af08882611a24565b9750611afb83611c90565b925050600181019050611adc565b5085935050505092915050565b611b1f81611e00565b82525050565b611b2e81611de6565b82525050565b611b3d81611de6565b82525050565b6000602082019050611b586000830184611a4b565b92915050565b6000604082019050611b736000830185611a4b565b611b806020830184611a4b565b9392505050565b6000604082019050611b9c6000830185611a4b565b611ba96020830184611b16565b9392505050565b60006020820190508181036000830152611bca8184611ab8565b905092915050565b60006040820190508181036000830152611bec8185611ab8565b90508181036020830152611c008184611a5a565b90509392505050565b6000602082019050611c1e6000830184611b34565b92915050565b6000604082019050611c396000830185611b34565b611c466020830184611a4b565b9392505050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611cca82611de6565b9150611cd583611de6565b925082611ce557611ce4611e41565b5b828204905092915050565b6000611cfb82611de6565b9150611d0683611de6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d3f57611d3e611e12565b5b828202905092915050565b6000611d5582611de6565b9150611d6083611de6565b925082821015611d7357611d72611e12565b5b828203905092915050565b6000611d8982611dc6565b9050919050565b60006dffffffffffffffffffffffffffff82169050919050565b60006fffffffffffffffffffffffffffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b6000611e0b82611de6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b611edc81611d7e565b8114611ee757600080fd5b50565b611ef381611d90565b8114611efe57600080fd5b50565b611f0a81611daa565b8114611f1557600080fd5b50565b611f2181611de6565b8114611f2c57600080fd5b50565b611f3881611df0565b8114611f4357600080fd5b5056fea264697066735822122064e395d57b3eb75aa9a6667e02b9e7c94dac64ed4c2064b48e94568e4bef475c64736f6c63430008070033";

type LFWUtils_ETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LFWUtils_ETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LFWUtils_ETH__factory extends ContractFactory {
  constructor(...args: LFWUtils_ETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LFWUtils_ETH> {
    return super.deploy(overrides || {}) as Promise<LFWUtils_ETH>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LFWUtils_ETH {
    return super.attach(address) as LFWUtils_ETH;
  }
  override connect(signer: Signer): LFWUtils_ETH__factory {
    return super.connect(signer) as LFWUtils_ETH__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LFWUtils_ETHInterface {
    return new utils.Interface(_abi) as LFWUtils_ETHInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LFWUtils_ETH {
    return new Contract(address, _abi, signerOrProvider) as LFWUtils_ETH;
  }
}
