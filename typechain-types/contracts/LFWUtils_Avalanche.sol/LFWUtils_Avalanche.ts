/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface LFWUtils_AvalancheInterface extends utils.Interface {
  functions: {
    "getBenqiStakingInfo(address,address)": FunctionFragment;
    "getGMXStakingInfo(address,address)": FunctionFragment;
    "getTraderJoeFarmingV1Info(uint256,address)": FunctionFragment;
    "getTraderJoeFarmingV2Info(uint256,address)": FunctionFragment;
    "getTraderJoeFarmingV3Info(uint256,address)": FunctionFragment;
    "getTraderJoeStakingInfo(address,address)": FunctionFragment;
    "getWonderlandStakingInfos(address,address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getBenqiStakingInfo"
      | "getGMXStakingInfo"
      | "getTraderJoeFarmingV1Info"
      | "getTraderJoeFarmingV2Info"
      | "getTraderJoeFarmingV3Info"
      | "getTraderJoeStakingInfo"
      | "getWonderlandStakingInfos"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getBenqiStakingInfo",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getGMXStakingInfo",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTraderJoeFarmingV1Info",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTraderJoeFarmingV2Info",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTraderJoeFarmingV3Info",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTraderJoeStakingInfo",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getWonderlandStakingInfos",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "getBenqiStakingInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGMXStakingInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTraderJoeFarmingV1Info",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTraderJoeFarmingV2Info",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTraderJoeFarmingV3Info",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTraderJoeStakingInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getWonderlandStakingInfos",
    data: BytesLike
  ): Result;

  events: {};
}

export interface LFWUtils_Avalanche extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: LFWUtils_AvalancheInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getBenqiStakingInfo(
      _scAddress: PromiseOrValue<string>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { stakingInfo: BigNumber[] }>;

    getGMXStakingInfo(
      _scAddress: PromiseOrValue<string>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { stakingInfo: BigNumber[] }>;

    getTraderJoeFarmingV1Info(
      _pId: PromiseOrValue<BigNumberish>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], string[]] & {
        farmingInfo: BigNumber[];
        farmingData: string[];
      }
    >;

    getTraderJoeFarmingV2Info(
      _pId: PromiseOrValue<BigNumberish>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], string[]] & {
        farmingInfo: BigNumber[];
        farmingData: string[];
      }
    >;

    getTraderJoeFarmingV3Info(
      _pId: PromiseOrValue<BigNumberish>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], string[]] & {
        farmingInfo: BigNumber[];
        farmingData: string[];
      }
    >;

    getTraderJoeStakingInfo(
      _scAddress: PromiseOrValue<string>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { stakingInfo: BigNumber[] }>;

    getWonderlandStakingInfos(
      _scAddress: PromiseOrValue<string>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { stakingInfo: BigNumber[] }>;
  };

  getBenqiStakingInfo(
    _scAddress: PromiseOrValue<string>,
    _userAddress: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getGMXStakingInfo(
    _scAddress: PromiseOrValue<string>,
    _userAddress: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getTraderJoeFarmingV1Info(
    _pId: PromiseOrValue<BigNumberish>,
    _userAddress: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber[], string[]] & {
      farmingInfo: BigNumber[];
      farmingData: string[];
    }
  >;

  getTraderJoeFarmingV2Info(
    _pId: PromiseOrValue<BigNumberish>,
    _userAddress: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber[], string[]] & {
      farmingInfo: BigNumber[];
      farmingData: string[];
    }
  >;

  getTraderJoeFarmingV3Info(
    _pId: PromiseOrValue<BigNumberish>,
    _userAddress: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber[], string[]] & {
      farmingInfo: BigNumber[];
      farmingData: string[];
    }
  >;

  getTraderJoeStakingInfo(
    _scAddress: PromiseOrValue<string>,
    _userAddress: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getWonderlandStakingInfos(
    _scAddress: PromiseOrValue<string>,
    _userAddress: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  callStatic: {
    getBenqiStakingInfo(
      _scAddress: PromiseOrValue<string>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getGMXStakingInfo(
      _scAddress: PromiseOrValue<string>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getTraderJoeFarmingV1Info(
      _pId: PromiseOrValue<BigNumberish>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], string[]] & {
        farmingInfo: BigNumber[];
        farmingData: string[];
      }
    >;

    getTraderJoeFarmingV2Info(
      _pId: PromiseOrValue<BigNumberish>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], string[]] & {
        farmingInfo: BigNumber[];
        farmingData: string[];
      }
    >;

    getTraderJoeFarmingV3Info(
      _pId: PromiseOrValue<BigNumberish>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber[], string[]] & {
        farmingInfo: BigNumber[];
        farmingData: string[];
      }
    >;

    getTraderJoeStakingInfo(
      _scAddress: PromiseOrValue<string>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getWonderlandStakingInfos(
      _scAddress: PromiseOrValue<string>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;
  };

  filters: {};

  estimateGas: {
    getBenqiStakingInfo(
      _scAddress: PromiseOrValue<string>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGMXStakingInfo(
      _scAddress: PromiseOrValue<string>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTraderJoeFarmingV1Info(
      _pId: PromiseOrValue<BigNumberish>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTraderJoeFarmingV2Info(
      _pId: PromiseOrValue<BigNumberish>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTraderJoeFarmingV3Info(
      _pId: PromiseOrValue<BigNumberish>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTraderJoeStakingInfo(
      _scAddress: PromiseOrValue<string>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getWonderlandStakingInfos(
      _scAddress: PromiseOrValue<string>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getBenqiStakingInfo(
      _scAddress: PromiseOrValue<string>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGMXStakingInfo(
      _scAddress: PromiseOrValue<string>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTraderJoeFarmingV1Info(
      _pId: PromiseOrValue<BigNumberish>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTraderJoeFarmingV2Info(
      _pId: PromiseOrValue<BigNumberish>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTraderJoeFarmingV3Info(
      _pId: PromiseOrValue<BigNumberish>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTraderJoeStakingInfo(
      _scAddress: PromiseOrValue<string>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getWonderlandStakingInfos(
      _scAddress: PromiseOrValue<string>,
      _userAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
