/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IBenqiInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBenqiInterface__factory>;
    getContractFactory(
      name: "IGMXInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGMXInterface__factory>;
    getContractFactory(
      name: "IGMXStakingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGMXStakingInterface__factory>;
    getContractFactory(
      name: "IJoeFarmingV1Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJoeFarmingV1Interface__factory>;
    getContractFactory(
      name: "IJoeFarmingV2Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJoeFarmingV2Interface__factory>;
    getContractFactory(
      name: "IJoeFarmingV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJoeFarmingV3Interface__factory>;
    getContractFactory(
      name: "IJoeStakingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IJoeStakingInterface__factory>;
    getContractFactory(
      name: "IPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPair__factory>;
    getContractFactory(
      name: "IWonderlandInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWonderlandInterface__factory>;
    getContractFactory(
      name: "LFWUtils_Avalanche",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LFWUtils_Avalanche__factory>;
    getContractFactory(
      name: "IApeBananaFarmingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IApeBananaFarmingInterface__factory>;
    getContractFactory(
      name: "IApeJungleFarmingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IApeJungleFarmingInterface__factory>;
    getContractFactory(
      name: "IApeStakingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IApeStakingInterface__factory>;
    getContractFactory(
      name: "IBabyFarmingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBabyFarmingInterface__factory>;
    getContractFactory(
      name: "IBabyStakingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBabyStakingInterface__factory>;
    getContractFactory(
      name: "IBiswapFarmingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBiswapFarmingInterface__factory>;
    getContractFactory(
      name: "IBiswapStakingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBiswapStakingInterface__factory>;
    getContractFactory(
      name: "IPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPair__factory>;
    getContractFactory(
      name: "IPancakeFarmingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeFarmingInterface__factory>;
    getContractFactory(
      name: "IPancakeStakingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeStakingInterface__factory>;
    getContractFactory(
      name: "IVenusVAIInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVenusVAIInterface__factory>;
    getContractFactory(
      name: "IVenusVRTInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVenusVRTInterface__factory>;
    getContractFactory(
      name: "IVenusXVSInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVenusXVSInterface__factory>;
    getContractFactory(
      name: "LFWUtils_BSC",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LFWUtils_BSC__factory>;
    getContractFactory(
      name: "ICronaFarmingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICronaFarmingInterface__factory>;
    getContractFactory(
      name: "ICronaStakingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICronaStakingInterface__factory>;
    getContractFactory(
      name: "IMMInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMMInterface__factory>;
    getContractFactory(
      name: "IPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPair__factory>;
    getContractFactory(
      name: "ITectonicInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITectonicInterface__factory>;
    getContractFactory(
      name: "IVVSInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVVSInterface__factory>;
    getContractFactory(
      name: "LFWUtils_Cronos",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LFWUtils_Cronos__factory>;
    getContractFactory(
      name: "IAaveInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAaveInterface__factory>;
    getContractFactory(
      name: "IConvexEarnCRVInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IConvexEarnCRVInterface__factory>;
    getContractFactory(
      name: "IConvexEarncvxCRVInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IConvexEarncvxCRVInterface__factory>;
    getContractFactory(
      name: "ILidoOracleInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILidoOracleInterface__factory>;
    getContractFactory(
      name: "ILidostETHInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILidostETHInterface__factory>;
    getContractFactory(
      name: "IPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPair__factory>;
    getContractFactory(
      name: "IShibaswapInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IShibaswapInterface__factory>;
    getContractFactory(
      name: "ISushiswapFarmingV1Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISushiswapFarmingV1Interface__factory>;
    getContractFactory(
      name: "ISushiswapFarmingV2Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISushiswapFarmingV2Interface__factory>;
    getContractFactory(
      name: "ISushiswapStakingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISushiswapStakingInterface__factory>;
    getContractFactory(
      name: "LFWUtils_ETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LFWUtils_ETH__factory>;
    getContractFactory(
      name: "IFWalletInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFWalletInterface__factory>;
    getContractFactory(
      name: "IGeistFarmingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGeistFarmingInterface__factory>;
    getContractFactory(
      name: "IGeistStakingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGeistStakingInterface__factory>;
    getContractFactory(
      name: "IPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPair__factory>;
    getContractFactory(
      name: "ISpiritInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISpiritInterface__factory>;
    getContractFactory(
      name: "ISpookyFarmingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISpookyFarmingInterface__factory>;
    getContractFactory(
      name: "ISpookyStakingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISpookyStakingInterface__factory>;
    getContractFactory(
      name: "IWigoInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWigoInterface__factory>;
    getContractFactory(
      name: "LFWUtils_Fantom",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LFWUtils_Fantom__factory>;
    getContractFactory(
      name: "IApeSwapFarmingInteface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IApeSwapFarmingInteface__factory>;
    getContractFactory(
      name: "IGNSFarmingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGNSFarmingInterface__factory>;
    getContractFactory(
      name: "IGNSStakingP1Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGNSStakingP1Interface__factory>;
    getContractFactory(
      name: "IGNSStakingP2Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGNSStakingP2Interface__factory>;
    getContractFactory(
      name: "IPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPair__factory>;
    getContractFactory(
      name: "IQuickSwapDualLPFarmingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IQuickSwapDualLPFarmingInterface__factory>;
    getContractFactory(
      name: "IQuickSwapLPFarmingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IQuickSwapLPFarmingInterface__factory>;
    getContractFactory(
      name: "IQuickSwapStakingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IQuickSwapStakingInterface__factory>;
    getContractFactory(
      name: "ISandboxStakingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISandboxStakingInterface__factory>;
    getContractFactory(
      name: "ISandboxUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISandboxUtils__factory>;
    getContractFactory(
      name: "ISushiswapFarmingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISushiswapFarmingInterface__factory>;
    getContractFactory(
      name: "LFWUtils_Polygon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LFWUtils_Polygon__factory>;

    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IBenqiInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBenqiInterface>;
    getContractAt(
      name: "IGMXInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGMXInterface>;
    getContractAt(
      name: "IGMXStakingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGMXStakingInterface>;
    getContractAt(
      name: "IJoeFarmingV1Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJoeFarmingV1Interface>;
    getContractAt(
      name: "IJoeFarmingV2Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJoeFarmingV2Interface>;
    getContractAt(
      name: "IJoeFarmingV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJoeFarmingV3Interface>;
    getContractAt(
      name: "IJoeStakingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IJoeStakingInterface>;
    getContractAt(
      name: "IPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPair>;
    getContractAt(
      name: "IWonderlandInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWonderlandInterface>;
    getContractAt(
      name: "LFWUtils_Avalanche",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LFWUtils_Avalanche>;
    getContractAt(
      name: "IApeBananaFarmingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IApeBananaFarmingInterface>;
    getContractAt(
      name: "IApeJungleFarmingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IApeJungleFarmingInterface>;
    getContractAt(
      name: "IApeStakingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IApeStakingInterface>;
    getContractAt(
      name: "IBabyFarmingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBabyFarmingInterface>;
    getContractAt(
      name: "IBabyStakingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBabyStakingInterface>;
    getContractAt(
      name: "IBiswapFarmingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBiswapFarmingInterface>;
    getContractAt(
      name: "IBiswapStakingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBiswapStakingInterface>;
    getContractAt(
      name: "IPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPair>;
    getContractAt(
      name: "IPancakeFarmingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeFarmingInterface>;
    getContractAt(
      name: "IPancakeStakingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeStakingInterface>;
    getContractAt(
      name: "IVenusVAIInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVenusVAIInterface>;
    getContractAt(
      name: "IVenusVRTInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVenusVRTInterface>;
    getContractAt(
      name: "IVenusXVSInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVenusXVSInterface>;
    getContractAt(
      name: "LFWUtils_BSC",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LFWUtils_BSC>;
    getContractAt(
      name: "ICronaFarmingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICronaFarmingInterface>;
    getContractAt(
      name: "ICronaStakingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICronaStakingInterface>;
    getContractAt(
      name: "IMMInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMMInterface>;
    getContractAt(
      name: "IPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPair>;
    getContractAt(
      name: "ITectonicInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITectonicInterface>;
    getContractAt(
      name: "IVVSInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVVSInterface>;
    getContractAt(
      name: "LFWUtils_Cronos",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LFWUtils_Cronos>;
    getContractAt(
      name: "IAaveInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAaveInterface>;
    getContractAt(
      name: "IConvexEarnCRVInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IConvexEarnCRVInterface>;
    getContractAt(
      name: "IConvexEarncvxCRVInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IConvexEarncvxCRVInterface>;
    getContractAt(
      name: "ILidoOracleInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILidoOracleInterface>;
    getContractAt(
      name: "ILidostETHInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILidostETHInterface>;
    getContractAt(
      name: "IPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPair>;
    getContractAt(
      name: "IShibaswapInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IShibaswapInterface>;
    getContractAt(
      name: "ISushiswapFarmingV1Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISushiswapFarmingV1Interface>;
    getContractAt(
      name: "ISushiswapFarmingV2Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISushiswapFarmingV2Interface>;
    getContractAt(
      name: "ISushiswapStakingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISushiswapStakingInterface>;
    getContractAt(
      name: "LFWUtils_ETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LFWUtils_ETH>;
    getContractAt(
      name: "IFWalletInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFWalletInterface>;
    getContractAt(
      name: "IGeistFarmingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGeistFarmingInterface>;
    getContractAt(
      name: "IGeistStakingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGeistStakingInterface>;
    getContractAt(
      name: "IPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPair>;
    getContractAt(
      name: "ISpiritInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISpiritInterface>;
    getContractAt(
      name: "ISpookyFarmingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISpookyFarmingInterface>;
    getContractAt(
      name: "ISpookyStakingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISpookyStakingInterface>;
    getContractAt(
      name: "IWigoInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWigoInterface>;
    getContractAt(
      name: "LFWUtils_Fantom",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LFWUtils_Fantom>;
    getContractAt(
      name: "IApeSwapFarmingInteface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IApeSwapFarmingInteface>;
    getContractAt(
      name: "IGNSFarmingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGNSFarmingInterface>;
    getContractAt(
      name: "IGNSStakingP1Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGNSStakingP1Interface>;
    getContractAt(
      name: "IGNSStakingP2Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGNSStakingP2Interface>;
    getContractAt(
      name: "IPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPair>;
    getContractAt(
      name: "IQuickSwapDualLPFarmingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IQuickSwapDualLPFarmingInterface>;
    getContractAt(
      name: "IQuickSwapLPFarmingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IQuickSwapLPFarmingInterface>;
    getContractAt(
      name: "IQuickSwapStakingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IQuickSwapStakingInterface>;
    getContractAt(
      name: "ISandboxStakingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISandboxStakingInterface>;
    getContractAt(
      name: "ISandboxUtils",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISandboxUtils>;
    getContractAt(
      name: "ISushiswapFarmingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISushiswapFarmingInterface>;
    getContractAt(
      name: "LFWUtils_Polygon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LFWUtils_Polygon>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
